function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import * as React from "react";
import * as SliderPrimitive from "@radix-ui/react-slider";
import { cn } from "../../lib/utils";
const Slider = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement(SliderPrimitive.Root, _extends({
  ref: ref,
  className: cn("relative flex w-full touch-none select-none items-center", className)
}, props), /*#__PURE__*/React.createElement(SliderPrimitive.Track, {
  className: "relative h-2 w-full grow overflow-hidden rounded-full bg-secondary"
}, /*#__PURE__*/React.createElement(SliderPrimitive.Range, {
  className: "absolute h-full bg-primary"
})), /*#__PURE__*/React.createElement(SliderPrimitive.Thumb, {
  className: "block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50"
})));
Slider.displayName = SliderPrimitive.Root.displayName;
export { Slider };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIlNsaWRlclByaW1pdGl2ZSIsImNuIiwiU2xpZGVyIiwiZm9yd2FyZFJlZiIsImNsYXNzTmFtZSIsInByb3BzIiwicmVmIiwiY3JlYXRlRWxlbWVudCIsIlJvb3QiLCJfZXh0ZW5kcyIsIlRyYWNrIiwiUmFuZ2UiLCJUaHVtYiIsImRpc3BsYXlOYW1lIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdWkvc2xpZGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0ICogYXMgU2xpZGVyUHJpbWl0aXZlIGZyb20gXCJAcmFkaXgtdWkvcmVhY3Qtc2xpZGVyXCJcblxuaW1wb3J0IHsgY24gfSBmcm9tIFwiQC9saWIvdXRpbHNcIlxuXG5jb25zdCBTbGlkZXIgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBTbGlkZXJQcmltaXRpdmUuUm9vdD4sXG4gIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgU2xpZGVyUHJpbWl0aXZlLlJvb3Q+XG4+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4gIDxTbGlkZXJQcmltaXRpdmUuUm9vdFxuICAgIHJlZj17cmVmfVxuICAgIGNsYXNzTmFtZT17Y24oXG4gICAgICBcInJlbGF0aXZlIGZsZXggdy1mdWxsIHRvdWNoLW5vbmUgc2VsZWN0LW5vbmUgaXRlbXMtY2VudGVyXCIsXG4gICAgICBjbGFzc05hbWVcbiAgICApfVxuICAgIHsuLi5wcm9wc31cbiAgPlxuICAgIDxTbGlkZXJQcmltaXRpdmUuVHJhY2sgY2xhc3NOYW1lPVwicmVsYXRpdmUgaC0yIHctZnVsbCBncm93IG92ZXJmbG93LWhpZGRlbiByb3VuZGVkLWZ1bGwgYmctc2Vjb25kYXJ5XCI+XG4gICAgICA8U2xpZGVyUHJpbWl0aXZlLlJhbmdlIGNsYXNzTmFtZT1cImFic29sdXRlIGgtZnVsbCBiZy1wcmltYXJ5XCIgLz5cbiAgICA8L1NsaWRlclByaW1pdGl2ZS5UcmFjaz5cbiAgICA8U2xpZGVyUHJpbWl0aXZlLlRodW1iIGNsYXNzTmFtZT1cImJsb2NrIGgtNSB3LTUgcm91bmRlZC1mdWxsIGJvcmRlci0yIGJvcmRlci1wcmltYXJ5IGJnLWJhY2tncm91bmQgcmluZy1vZmZzZXQtYmFja2dyb3VuZCB0cmFuc2l0aW9uLWNvbG9ycyBmb2N1cy12aXNpYmxlOm91dGxpbmUtbm9uZSBmb2N1cy12aXNpYmxlOnJpbmctMiBmb2N1cy12aXNpYmxlOnJpbmctcmluZyBmb2N1cy12aXNpYmxlOnJpbmctb2Zmc2V0LTIgZGlzYWJsZWQ6cG9pbnRlci1ldmVudHMtbm9uZSBkaXNhYmxlZDpvcGFjaXR5LTUwXCIgLz5cbiAgPC9TbGlkZXJQcmltaXRpdmUuUm9vdD5cbikpXG5TbGlkZXIuZGlzcGxheU5hbWUgPSBTbGlkZXJQcmltaXRpdmUuUm9vdC5kaXNwbGF5TmFtZVxuXG5leHBvcnQgeyBTbGlkZXIgfVxuIl0sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxLQUFLQSxLQUFLLE1BQU0sT0FBTztBQUM5QixPQUFPLEtBQUtDLGVBQWUsTUFBTSx3QkFBd0I7QUFFekQsU0FBU0MsRUFBRSxRQUFRLGFBQWE7QUFFaEMsTUFBTUMsTUFBTSxnQkFBR0gsS0FBSyxDQUFDSSxVQUFVLENBRzdCLENBQUM7RUFBRUMsU0FBUztFQUFFLEdBQUdDO0FBQU0sQ0FBQyxFQUFFQyxHQUFHLGtCQUM3QlAsS0FBQSxDQUFBUSxhQUFBLENBQUNQLGVBQWUsQ0FBQ1EsSUFBSSxFQUFBQyxRQUFBO0VBQ25CSCxHQUFHLEVBQUVBLEdBQUk7RUFDVEYsU0FBUyxFQUFFSCxFQUFFLENBQ1gsMERBQTBELEVBQzFERyxTQUNGO0FBQUUsR0FDRUMsS0FBSyxnQkFFVE4sS0FBQSxDQUFBUSxhQUFBLENBQUNQLGVBQWUsQ0FBQ1UsS0FBSztFQUFDTixTQUFTLEVBQUM7QUFBb0UsZ0JBQ25HTCxLQUFBLENBQUFRLGFBQUEsQ0FBQ1AsZUFBZSxDQUFDVyxLQUFLO0VBQUNQLFNBQVMsRUFBQztBQUE0QixDQUFFLENBQzFDLENBQUMsZUFDeEJMLEtBQUEsQ0FBQVEsYUFBQSxDQUFDUCxlQUFlLENBQUNZLEtBQUs7RUFBQ1IsU0FBUyxFQUFDO0FBQWdRLENBQUUsQ0FDL1EsQ0FDdkIsQ0FBQztBQUNGRixNQUFNLENBQUNXLFdBQVcsR0FBR2IsZUFBZSxDQUFDUSxJQUFJLENBQUNLLFdBQVc7QUFFckQsU0FBU1gsTUFBTSIsImlnbm9yZUxpc3QiOltdfQ==