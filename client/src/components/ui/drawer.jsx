function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import * as React from "react";
import { Drawer as DrawerPrimitive } from "vaul";
import { cn } from "../../lib/utils";
const Drawer = ({
  shouldScaleBackground = true,
  ...props
}) => /*#__PURE__*/React.createElement(DrawerPrimitive.Root, _extends({
  shouldScaleBackground: shouldScaleBackground
}, props));
Drawer.displayName = "Drawer";
const DrawerTrigger = DrawerPrimitive.Trigger;
const DrawerPortal = DrawerPrimitive.Portal;
const DrawerClose = DrawerPrimitive.Close;
const DrawerOverlay = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement(DrawerPrimitive.Overlay, _extends({
  ref: ref,
  className: cn("fixed inset-0 z-50 bg-black/80", className)
}, props)));
DrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName;
const DrawerContent = /*#__PURE__*/React.forwardRef(({
  className,
  children,
  ...props
}, ref) => /*#__PURE__*/React.createElement(DrawerPortal, null, /*#__PURE__*/React.createElement(DrawerOverlay, null), /*#__PURE__*/React.createElement(DrawerPrimitive.Content, _extends({
  ref: ref,
  className: cn("fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background", className)
}, props), /*#__PURE__*/React.createElement("div", {
  className: "mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted"
}), children)));
DrawerContent.displayName = "DrawerContent";
const DrawerHeader = ({
  className,
  ...props
}) => /*#__PURE__*/React.createElement("div", _extends({
  className: cn("grid gap-1.5 p-4 text-center sm:text-left", className)
}, props));
DrawerHeader.displayName = "DrawerHeader";
const DrawerFooter = ({
  className,
  ...props
}) => /*#__PURE__*/React.createElement("div", _extends({
  className: cn("mt-auto flex flex-col gap-2 p-4", className)
}, props));
DrawerFooter.displayName = "DrawerFooter";
const DrawerTitle = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement(DrawerPrimitive.Title, _extends({
  ref: ref,
  className: cn("text-lg font-semibold leading-none tracking-tight", className)
}, props)));
DrawerTitle.displayName = DrawerPrimitive.Title.displayName;
const DrawerDescription = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement(DrawerPrimitive.Description, _extends({
  ref: ref,
  className: cn("text-sm text-muted-foreground", className)
}, props)));
DrawerDescription.displayName = DrawerPrimitive.Description.displayName;
export { Drawer, DrawerPortal, DrawerOverlay, DrawerTrigger, DrawerClose, DrawerContent, DrawerHeader, DrawerFooter, DrawerTitle, DrawerDescription };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIkRyYXdlciIsIkRyYXdlclByaW1pdGl2ZSIsImNuIiwic2hvdWxkU2NhbGVCYWNrZ3JvdW5kIiwicHJvcHMiLCJjcmVhdGVFbGVtZW50IiwiUm9vdCIsIl9leHRlbmRzIiwiZGlzcGxheU5hbWUiLCJEcmF3ZXJUcmlnZ2VyIiwiVHJpZ2dlciIsIkRyYXdlclBvcnRhbCIsIlBvcnRhbCIsIkRyYXdlckNsb3NlIiwiQ2xvc2UiLCJEcmF3ZXJPdmVybGF5IiwiZm9yd2FyZFJlZiIsImNsYXNzTmFtZSIsInJlZiIsIk92ZXJsYXkiLCJEcmF3ZXJDb250ZW50IiwiY2hpbGRyZW4iLCJDb250ZW50IiwiRHJhd2VySGVhZGVyIiwiRHJhd2VyRm9vdGVyIiwiRHJhd2VyVGl0bGUiLCJUaXRsZSIsIkRyYXdlckRlc2NyaXB0aW9uIiwiRGVzY3JpcHRpb24iXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy91aS9kcmF3ZXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBEcmF3ZXIgYXMgRHJhd2VyUHJpbWl0aXZlIH0gZnJvbSBcInZhdWxcIlxuXG5pbXBvcnQgeyBjbiB9IGZyb20gXCJAL2xpYi91dGlsc1wiXG5cbmNvbnN0IERyYXdlciA9ICh7XG4gIHNob3VsZFNjYWxlQmFja2dyb3VuZCA9IHRydWUsXG4gIC4uLnByb3BzXG59OiBSZWFjdC5Db21wb25lbnRQcm9wczx0eXBlb2YgRHJhd2VyUHJpbWl0aXZlLlJvb3Q+KSA9PiAoXG4gIDxEcmF3ZXJQcmltaXRpdmUuUm9vdFxuICAgIHNob3VsZFNjYWxlQmFja2dyb3VuZD17c2hvdWxkU2NhbGVCYWNrZ3JvdW5kfVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbilcbkRyYXdlci5kaXNwbGF5TmFtZSA9IFwiRHJhd2VyXCJcblxuY29uc3QgRHJhd2VyVHJpZ2dlciA9IERyYXdlclByaW1pdGl2ZS5UcmlnZ2VyXG5cbmNvbnN0IERyYXdlclBvcnRhbCA9IERyYXdlclByaW1pdGl2ZS5Qb3J0YWxcblxuY29uc3QgRHJhd2VyQ2xvc2UgPSBEcmF3ZXJQcmltaXRpdmUuQ2xvc2VcblxuY29uc3QgRHJhd2VyT3ZlcmxheSA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIERyYXdlclByaW1pdGl2ZS5PdmVybGF5PixcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBEcmF3ZXJQcmltaXRpdmUuT3ZlcmxheT5cbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPERyYXdlclByaW1pdGl2ZS5PdmVybGF5XG4gICAgcmVmPXtyZWZ9XG4gICAgY2xhc3NOYW1lPXtjbihcImZpeGVkIGluc2V0LTAgei01MCBiZy1ibGFjay84MFwiLCBjbGFzc05hbWUpfVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbikpXG5EcmF3ZXJPdmVybGF5LmRpc3BsYXlOYW1lID0gRHJhd2VyUHJpbWl0aXZlLk92ZXJsYXkuZGlzcGxheU5hbWVcblxuY29uc3QgRHJhd2VyQ29udGVudCA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIERyYXdlclByaW1pdGl2ZS5Db250ZW50PixcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBEcmF3ZXJQcmltaXRpdmUuQ29udGVudD5cbj4oKHsgY2xhc3NOYW1lLCBjaGlsZHJlbiwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4gIDxEcmF3ZXJQb3J0YWw+XG4gICAgPERyYXdlck92ZXJsYXkgLz5cbiAgICA8RHJhd2VyUHJpbWl0aXZlLkNvbnRlbnRcbiAgICAgIHJlZj17cmVmfVxuICAgICAgY2xhc3NOYW1lPXtjbihcbiAgICAgICAgXCJmaXhlZCBpbnNldC14LTAgYm90dG9tLTAgei01MCBtdC0yNCBmbGV4IGgtYXV0byBmbGV4LWNvbCByb3VuZGVkLXQtWzEwcHhdIGJvcmRlciBiZy1iYWNrZ3JvdW5kXCIsXG4gICAgICAgIGNsYXNzTmFtZVxuICAgICAgKX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICA+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm14LWF1dG8gbXQtNCBoLTIgdy1bMTAwcHhdIHJvdW5kZWQtZnVsbCBiZy1tdXRlZFwiIC8+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9EcmF3ZXJQcmltaXRpdmUuQ29udGVudD5cbiAgPC9EcmF3ZXJQb3J0YWw+XG4pKVxuRHJhd2VyQ29udGVudC5kaXNwbGF5TmFtZSA9IFwiRHJhd2VyQ29udGVudFwiXG5cbmNvbnN0IERyYXdlckhlYWRlciA9ICh7XG4gIGNsYXNzTmFtZSxcbiAgLi4ucHJvcHNcbn06IFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PikgPT4gKFxuICA8ZGl2XG4gICAgY2xhc3NOYW1lPXtjbihcImdyaWQgZ2FwLTEuNSBwLTQgdGV4dC1jZW50ZXIgc206dGV4dC1sZWZ0XCIsIGNsYXNzTmFtZSl9XG4gICAgey4uLnByb3BzfVxuICAvPlxuKVxuRHJhd2VySGVhZGVyLmRpc3BsYXlOYW1lID0gXCJEcmF3ZXJIZWFkZXJcIlxuXG5jb25zdCBEcmF3ZXJGb290ZXIgPSAoe1xuICBjbGFzc05hbWUsXG4gIC4uLnByb3BzXG59OiBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4pID0+IChcbiAgPGRpdlxuICAgIGNsYXNzTmFtZT17Y24oXCJtdC1hdXRvIGZsZXggZmxleC1jb2wgZ2FwLTIgcC00XCIsIGNsYXNzTmFtZSl9XG4gICAgey4uLnByb3BzfVxuICAvPlxuKVxuRHJhd2VyRm9vdGVyLmRpc3BsYXlOYW1lID0gXCJEcmF3ZXJGb290ZXJcIlxuXG5jb25zdCBEcmF3ZXJUaXRsZSA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIERyYXdlclByaW1pdGl2ZS5UaXRsZT4sXG4gIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgRHJhd2VyUHJpbWl0aXZlLlRpdGxlPlxuPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKFxuICA8RHJhd2VyUHJpbWl0aXZlLlRpdGxlXG4gICAgcmVmPXtyZWZ9XG4gICAgY2xhc3NOYW1lPXtjbihcbiAgICAgIFwidGV4dC1sZyBmb250LXNlbWlib2xkIGxlYWRpbmctbm9uZSB0cmFja2luZy10aWdodFwiLFxuICAgICAgY2xhc3NOYW1lXG4gICAgKX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pKVxuRHJhd2VyVGl0bGUuZGlzcGxheU5hbWUgPSBEcmF3ZXJQcmltaXRpdmUuVGl0bGUuZGlzcGxheU5hbWVcblxuY29uc3QgRHJhd2VyRGVzY3JpcHRpb24gPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBEcmF3ZXJQcmltaXRpdmUuRGVzY3JpcHRpb24+LFxuICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIERyYXdlclByaW1pdGl2ZS5EZXNjcmlwdGlvbj5cbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPERyYXdlclByaW1pdGl2ZS5EZXNjcmlwdGlvblxuICAgIHJlZj17cmVmfVxuICAgIGNsYXNzTmFtZT17Y24oXCJ0ZXh0LXNtIHRleHQtbXV0ZWQtZm9yZWdyb3VuZFwiLCBjbGFzc05hbWUpfVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbikpXG5EcmF3ZXJEZXNjcmlwdGlvbi5kaXNwbGF5TmFtZSA9IERyYXdlclByaW1pdGl2ZS5EZXNjcmlwdGlvbi5kaXNwbGF5TmFtZVxuXG5leHBvcnQge1xuICBEcmF3ZXIsXG4gIERyYXdlclBvcnRhbCxcbiAgRHJhd2VyT3ZlcmxheSxcbiAgRHJhd2VyVHJpZ2dlcixcbiAgRHJhd2VyQ2xvc2UsXG4gIERyYXdlckNvbnRlbnQsXG4gIERyYXdlckhlYWRlcixcbiAgRHJhd2VyRm9vdGVyLFxuICBEcmF3ZXJUaXRsZSxcbiAgRHJhd2VyRGVzY3JpcHRpb24sXG59XG4iXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEtBQUtBLEtBQUssTUFBTSxPQUFPO0FBQzlCLFNBQVNDLE1BQU0sSUFBSUMsZUFBZSxRQUFRLE1BQU07QUFFaEQsU0FBU0MsRUFBRSxRQUFRLGFBQWE7QUFFaEMsTUFBTUYsTUFBTSxHQUFHQSxDQUFDO0VBQ2RHLHFCQUFxQixHQUFHLElBQUk7RUFDNUIsR0FBR0M7QUFDOEMsQ0FBQyxrQkFDbERMLEtBQUEsQ0FBQU0sYUFBQSxDQUFDSixlQUFlLENBQUNLLElBQUksRUFBQUMsUUFBQTtFQUNuQkoscUJBQXFCLEVBQUVBO0FBQXNCLEdBQ3pDQyxLQUFLLENBQ1YsQ0FDRjtBQUNESixNQUFNLENBQUNRLFdBQVcsR0FBRyxRQUFRO0FBRTdCLE1BQU1DLGFBQWEsR0FBR1IsZUFBZSxDQUFDUyxPQUFPO0FBRTdDLE1BQU1DLFlBQVksR0FBR1YsZUFBZSxDQUFDVyxNQUFNO0FBRTNDLE1BQU1DLFdBQVcsR0FBR1osZUFBZSxDQUFDYSxLQUFLO0FBRXpDLE1BQU1DLGFBQWEsZ0JBQUdoQixLQUFLLENBQUNpQixVQUFVLENBR3BDLENBQUM7RUFBRUMsU0FBUztFQUFFLEdBQUdiO0FBQU0sQ0FBQyxFQUFFYyxHQUFHLGtCQUM3Qm5CLEtBQUEsQ0FBQU0sYUFBQSxDQUFDSixlQUFlLENBQUNrQixPQUFPLEVBQUFaLFFBQUE7RUFDdEJXLEdBQUcsRUFBRUEsR0FBSTtFQUNURCxTQUFTLEVBQUVmLEVBQUUsQ0FBQyxnQ0FBZ0MsRUFBRWUsU0FBUztBQUFFLEdBQ3ZEYixLQUFLLENBQ1YsQ0FDRixDQUFDO0FBQ0ZXLGFBQWEsQ0FBQ1AsV0FBVyxHQUFHUCxlQUFlLENBQUNrQixPQUFPLENBQUNYLFdBQVc7QUFFL0QsTUFBTVksYUFBYSxnQkFBR3JCLEtBQUssQ0FBQ2lCLFVBQVUsQ0FHcEMsQ0FBQztFQUFFQyxTQUFTO0VBQUVJLFFBQVE7RUFBRSxHQUFHakI7QUFBTSxDQUFDLEVBQUVjLEdBQUcsa0JBQ3ZDbkIsS0FBQSxDQUFBTSxhQUFBLENBQUNNLFlBQVkscUJBQ1haLEtBQUEsQ0FBQU0sYUFBQSxDQUFDVSxhQUFhLE1BQUUsQ0FBQyxlQUNqQmhCLEtBQUEsQ0FBQU0sYUFBQSxDQUFDSixlQUFlLENBQUNxQixPQUFPLEVBQUFmLFFBQUE7RUFDdEJXLEdBQUcsRUFBRUEsR0FBSTtFQUNURCxTQUFTLEVBQUVmLEVBQUUsQ0FDWCxnR0FBZ0csRUFDaEdlLFNBQ0Y7QUFBRSxHQUNFYixLQUFLLGdCQUVUTCxLQUFBLENBQUFNLGFBQUE7RUFBS1ksU0FBUyxFQUFDO0FBQWtELENBQUUsQ0FBQyxFQUNuRUksUUFDc0IsQ0FDYixDQUNmLENBQUM7QUFDRkQsYUFBYSxDQUFDWixXQUFXLEdBQUcsZUFBZTtBQUUzQyxNQUFNZSxZQUFZLEdBQUdBLENBQUM7RUFDcEJOLFNBQVM7RUFDVCxHQUFHYjtBQUNpQyxDQUFDLGtCQUNyQ0wsS0FBQSxDQUFBTSxhQUFBLFFBQUFFLFFBQUE7RUFDRVUsU0FBUyxFQUFFZixFQUFFLENBQUMsMkNBQTJDLEVBQUVlLFNBQVM7QUFBRSxHQUNsRWIsS0FBSyxDQUNWLENBQ0Y7QUFDRG1CLFlBQVksQ0FBQ2YsV0FBVyxHQUFHLGNBQWM7QUFFekMsTUFBTWdCLFlBQVksR0FBR0EsQ0FBQztFQUNwQlAsU0FBUztFQUNULEdBQUdiO0FBQ2lDLENBQUMsa0JBQ3JDTCxLQUFBLENBQUFNLGFBQUEsUUFBQUUsUUFBQTtFQUNFVSxTQUFTLEVBQUVmLEVBQUUsQ0FBQyxpQ0FBaUMsRUFBRWUsU0FBUztBQUFFLEdBQ3hEYixLQUFLLENBQ1YsQ0FDRjtBQUNEb0IsWUFBWSxDQUFDaEIsV0FBVyxHQUFHLGNBQWM7QUFFekMsTUFBTWlCLFdBQVcsZ0JBQUcxQixLQUFLLENBQUNpQixVQUFVLENBR2xDLENBQUM7RUFBRUMsU0FBUztFQUFFLEdBQUdiO0FBQU0sQ0FBQyxFQUFFYyxHQUFHLGtCQUM3Qm5CLEtBQUEsQ0FBQU0sYUFBQSxDQUFDSixlQUFlLENBQUN5QixLQUFLLEVBQUFuQixRQUFBO0VBQ3BCVyxHQUFHLEVBQUVBLEdBQUk7RUFDVEQsU0FBUyxFQUFFZixFQUFFLENBQ1gsbURBQW1ELEVBQ25EZSxTQUNGO0FBQUUsR0FDRWIsS0FBSyxDQUNWLENBQ0YsQ0FBQztBQUNGcUIsV0FBVyxDQUFDakIsV0FBVyxHQUFHUCxlQUFlLENBQUN5QixLQUFLLENBQUNsQixXQUFXO0FBRTNELE1BQU1tQixpQkFBaUIsZ0JBQUc1QixLQUFLLENBQUNpQixVQUFVLENBR3hDLENBQUM7RUFBRUMsU0FBUztFQUFFLEdBQUdiO0FBQU0sQ0FBQyxFQUFFYyxHQUFHLGtCQUM3Qm5CLEtBQUEsQ0FBQU0sYUFBQSxDQUFDSixlQUFlLENBQUMyQixXQUFXLEVBQUFyQixRQUFBO0VBQzFCVyxHQUFHLEVBQUVBLEdBQUk7RUFDVEQsU0FBUyxFQUFFZixFQUFFLENBQUMsK0JBQStCLEVBQUVlLFNBQVM7QUFBRSxHQUN0RGIsS0FBSyxDQUNWLENBQ0YsQ0FBQztBQUNGdUIsaUJBQWlCLENBQUNuQixXQUFXLEdBQUdQLGVBQWUsQ0FBQzJCLFdBQVcsQ0FBQ3BCLFdBQVc7QUFFdkUsU0FDRVIsTUFBTSxFQUNOVyxZQUFZLEVBQ1pJLGFBQWEsRUFDYk4sYUFBYSxFQUNiSSxXQUFXLEVBQ1hPLGFBQWEsRUFDYkcsWUFBWSxFQUNaQyxZQUFZLEVBQ1pDLFdBQVcsRUFDWEUsaUJBQWlCIiwiaWdub3JlTGlzdCI6W119