function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import * as React from "react";
import { OTPInput, OTPInputContext } from "input-otp";
import { Dot } from "lucide-react";
import { cn } from "@/lib/utils";
const InputOTP = /*#__PURE__*/React.forwardRef(({
  className,
  containerClassName,
  ...props
}, ref) => /*#__PURE__*/React.createElement(OTPInput, _extends({
  ref: ref,
  containerClassName: cn("flex items-center gap-2 has-[:disabled]:opacity-50", containerClassName),
  className: cn("disabled:cursor-not-allowed", className)
}, props)));
InputOTP.displayName = "InputOTP";
const InputOTPGroup = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement("div", _extends({
  ref: ref,
  className: cn("flex items-center", className)
}, props)));
InputOTPGroup.displayName = "InputOTPGroup";
const InputOTPSlot = /*#__PURE__*/React.forwardRef(({
  index,
  className,
  ...props
}, ref) => {
  const inputOTPContext = React.useContext(OTPInputContext);
  const {
    char,
    hasFakeCaret,
    isActive
  } = inputOTPContext.slots[index];
  return /*#__PURE__*/React.createElement("div", _extends({
    ref: ref,
    className: cn("relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md", isActive && "z-10 ring-2 ring-ring ring-offset-background", className)
  }, props), char, hasFakeCaret && /*#__PURE__*/React.createElement("div", {
    className: "pointer-events-none absolute inset-0 flex items-center justify-center"
  }, /*#__PURE__*/React.createElement("div", {
    className: "h-4 w-px animate-caret-blink bg-foreground duration-1000"
  })));
});
InputOTPSlot.displayName = "InputOTPSlot";
const InputOTPSeparator = /*#__PURE__*/React.forwardRef(({
  ...props
}, ref) => /*#__PURE__*/React.createElement("div", _extends({
  ref: ref,
  role: "separator"
}, props), /*#__PURE__*/React.createElement(Dot, null)));
InputOTPSeparator.displayName = "InputOTPSeparator";
export { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIk9UUElucHV0IiwiT1RQSW5wdXRDb250ZXh0IiwiRG90IiwiY24iLCJJbnB1dE9UUCIsImZvcndhcmRSZWYiLCJjbGFzc05hbWUiLCJjb250YWluZXJDbGFzc05hbWUiLCJwcm9wcyIsInJlZiIsImNyZWF0ZUVsZW1lbnQiLCJfZXh0ZW5kcyIsImRpc3BsYXlOYW1lIiwiSW5wdXRPVFBHcm91cCIsIklucHV0T1RQU2xvdCIsImluZGV4IiwiaW5wdXRPVFBDb250ZXh0IiwidXNlQ29udGV4dCIsImNoYXIiLCJoYXNGYWtlQ2FyZXQiLCJpc0FjdGl2ZSIsInNsb3RzIiwiSW5wdXRPVFBTZXBhcmF0b3IiLCJyb2xlIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdWkvaW5wdXQtb3RwLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgT1RQSW5wdXQsIE9UUElucHV0Q29udGV4dCB9IGZyb20gXCJpbnB1dC1vdHBcIlxuaW1wb3J0IHsgRG90IH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiXG5cbmltcG9ydCB7IGNuIH0gZnJvbSBcIkAvbGliL3V0aWxzXCJcblxuY29uc3QgSW5wdXRPVFAgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBPVFBJbnB1dD4sXG4gIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgT1RQSW5wdXQ+XG4+KCh7IGNsYXNzTmFtZSwgY29udGFpbmVyQ2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPE9UUElucHV0XG4gICAgcmVmPXtyZWZ9XG4gICAgY29udGFpbmVyQ2xhc3NOYW1lPXtjbihcbiAgICAgIFwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTIgaGFzLVs6ZGlzYWJsZWRdOm9wYWNpdHktNTBcIixcbiAgICAgIGNvbnRhaW5lckNsYXNzTmFtZVxuICAgICl9XG4gICAgY2xhc3NOYW1lPXtjbihcImRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZFwiLCBjbGFzc05hbWUpfVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbikpXG5JbnB1dE9UUC5kaXNwbGF5TmFtZSA9IFwiSW5wdXRPVFBcIlxuXG5jb25zdCBJbnB1dE9UUEdyb3VwID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgUmVhY3QuRWxlbWVudFJlZjxcImRpdlwiPixcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPFwiZGl2XCI+XG4+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4gIDxkaXYgcmVmPXtyZWZ9IGNsYXNzTmFtZT17Y24oXCJmbGV4IGl0ZW1zLWNlbnRlclwiLCBjbGFzc05hbWUpfSB7Li4ucHJvcHN9IC8+XG4pKVxuSW5wdXRPVFBHcm91cC5kaXNwbGF5TmFtZSA9IFwiSW5wdXRPVFBHcm91cFwiXG5cbmNvbnN0IElucHV0T1RQU2xvdCA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIFJlYWN0LkVsZW1lbnRSZWY8XCJkaXZcIj4sXG4gIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjxcImRpdlwiPiAmIHsgaW5kZXg6IG51bWJlciB9XG4+KCh7IGluZGV4LCBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4ge1xuICBjb25zdCBpbnB1dE9UUENvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0KE9UUElucHV0Q29udGV4dClcbiAgY29uc3QgeyBjaGFyLCBoYXNGYWtlQ2FyZXQsIGlzQWN0aXZlIH0gPSBpbnB1dE9UUENvbnRleHQuc2xvdHNbaW5kZXhdXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICByZWY9e3JlZn1cbiAgICAgIGNsYXNzTmFtZT17Y24oXG4gICAgICAgIFwicmVsYXRpdmUgZmxleCBoLTEwIHctMTAgaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGJvcmRlci15IGJvcmRlci1yIGJvcmRlci1pbnB1dCB0ZXh0LXNtIHRyYW5zaXRpb24tYWxsIGZpcnN0OnJvdW5kZWQtbC1tZCBmaXJzdDpib3JkZXItbCBsYXN0OnJvdW5kZWQtci1tZFwiLFxuICAgICAgICBpc0FjdGl2ZSAmJiBcInotMTAgcmluZy0yIHJpbmctcmluZyByaW5nLW9mZnNldC1iYWNrZ3JvdW5kXCIsXG4gICAgICAgIGNsYXNzTmFtZVxuICAgICAgKX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICA+XG4gICAgICB7Y2hhcn1cbiAgICAgIHtoYXNGYWtlQ2FyZXQgJiYgKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvaW50ZXItZXZlbnRzLW5vbmUgYWJzb2x1dGUgaW5zZXQtMCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaC00IHctcHggYW5pbWF0ZS1jYXJldC1ibGluayBiZy1mb3JlZ3JvdW5kIGR1cmF0aW9uLTEwMDBcIiAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gIClcbn0pXG5JbnB1dE9UUFNsb3QuZGlzcGxheU5hbWUgPSBcIklucHV0T1RQU2xvdFwiXG5cbmNvbnN0IElucHV0T1RQU2VwYXJhdG9yID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgUmVhY3QuRWxlbWVudFJlZjxcImRpdlwiPixcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPFwiZGl2XCI+XG4+KCh7IC4uLnByb3BzIH0sIHJlZikgPT4gKFxuICA8ZGl2IHJlZj17cmVmfSByb2xlPVwic2VwYXJhdG9yXCIgey4uLnByb3BzfT5cbiAgICA8RG90IC8+XG4gIDwvZGl2PlxuKSlcbklucHV0T1RQU2VwYXJhdG9yLmRpc3BsYXlOYW1lID0gXCJJbnB1dE9UUFNlcGFyYXRvclwiXG5cbmV4cG9ydCB7IElucHV0T1RQLCBJbnB1dE9UUEdyb3VwLCBJbnB1dE9UUFNsb3QsIElucHV0T1RQU2VwYXJhdG9yIH1cbiJdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sS0FBS0EsS0FBSyxN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