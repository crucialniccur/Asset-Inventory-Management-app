function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import * as React from "react";
import { cn } from "../../lib/utils";
const Table = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement("div", {
  className: "relative w-full overflow-auto"
}, /*#__PURE__*/React.createElement("table", _extends({
  ref: ref,
  className: cn("w-full caption-bottom text-sm", className)
}, props))));
Table.displayName = "Table";
const TableHeader = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement("thead", _extends({
  ref: ref,
  className: cn("[&_tr]:border-b", className)
}, props)));
TableHeader.displayName = "TableHeader";
const TableBody = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement("tbody", _extends({
  ref: ref,
  className: cn("[&_tr:last-child]:border-0", className)
}, props)));
TableBody.displayName = "TableBody";
const TableFooter = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement("tfoot", _extends({
  ref: ref,
  className: cn("border-t bg-muted/50 font-medium [&>tr]:last:border-b-0", className)
}, props)));
TableFooter.displayName = "TableFooter";
const TableRow = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement("tr", _extends({
  ref: ref,
  className: cn("border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted", className)
}, props)));
TableRow.displayName = "TableRow";
const TableHead = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement("th", _extends({
  ref: ref,
  className: cn("h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0", className)
}, props)));
TableHead.displayName = "TableHead";
const TableCell = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement("td", _extends({
  ref: ref,
  className: cn("p-4 align-middle [&:has([role=checkbox])]:pr-0", className)
}, props)));
TableCell.displayName = "TableCell";
const TableCaption = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement("caption", _extends({
  ref: ref,
  className: cn("mt-4 text-sm text-muted-foreground", className)
}, props)));
TableCaption.displayName = "TableCaption";
export { Table, TableHeader, TableBody, TableFooter, TableHead, TableRow, TableCell, TableCaption };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsImNuIiwiVGFibGUiLCJmb3J3YXJkUmVmIiwiY2xhc3NOYW1lIiwicHJvcHMiLCJyZWYiLCJjcmVhdGVFbGVtZW50IiwiX2V4dGVuZHMiLCJkaXNwbGF5TmFtZSIsIlRhYmxlSGVhZGVyIiwiVGFibGVCb2R5IiwiVGFibGVGb290ZXIiLCJUYWJsZVJvdyIsIlRhYmxlSGVhZCIsIlRhYmxlQ2VsbCIsIlRhYmxlQ2FwdGlvbiJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3VpL3RhYmxlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxuXG5pbXBvcnQgeyBjbiB9IGZyb20gXCJAL2xpYi91dGlsc1wiXG5cbmNvbnN0IFRhYmxlID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgSFRNTFRhYmxlRWxlbWVudCxcbiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTFRhYmxlRWxlbWVudD5cbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9XCJyZWxhdGl2ZSB3LWZ1bGwgb3ZlcmZsb3ctYXV0b1wiPlxuICAgIDx0YWJsZVxuICAgICAgcmVmPXtyZWZ9XG4gICAgICBjbGFzc05hbWU9e2NuKFwidy1mdWxsIGNhcHRpb24tYm90dG9tIHRleHQtc21cIiwgY2xhc3NOYW1lKX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICAvPlxuICA8L2Rpdj5cbikpXG5UYWJsZS5kaXNwbGF5TmFtZSA9IFwiVGFibGVcIlxuXG5jb25zdCBUYWJsZUhlYWRlciA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIEhUTUxUYWJsZVNlY3Rpb25FbGVtZW50LFxuICBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MVGFibGVTZWN0aW9uRWxlbWVudD5cbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPHRoZWFkIHJlZj17cmVmfSBjbGFzc05hbWU9e2NuKFwiWyZfdHJdOmJvcmRlci1iXCIsIGNsYXNzTmFtZSl9IHsuLi5wcm9wc30gLz5cbikpXG5UYWJsZUhlYWRlci5kaXNwbGF5TmFtZSA9IFwiVGFibGVIZWFkZXJcIlxuXG5jb25zdCBUYWJsZUJvZHkgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBIVE1MVGFibGVTZWN0aW9uRWxlbWVudCxcbiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTFRhYmxlU2VjdGlvbkVsZW1lbnQ+XG4+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4gIDx0Ym9keVxuICAgIHJlZj17cmVmfVxuICAgIGNsYXNzTmFtZT17Y24oXCJbJl90cjpsYXN0LWNoaWxkXTpib3JkZXItMFwiLCBjbGFzc05hbWUpfVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbikpXG5UYWJsZUJvZHkuZGlzcGxheU5hbWUgPSBcIlRhYmxlQm9keVwiXG5cbmNvbnN0IFRhYmxlRm9vdGVyID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgSFRNTFRhYmxlU2VjdGlvbkVsZW1lbnQsXG4gIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxUYWJsZVNlY3Rpb25FbGVtZW50PlxuPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKFxuICA8dGZvb3RcbiAgICByZWY9e3JlZn1cbiAgICBjbGFzc05hbWU9e2NuKFxuICAgICAgXCJib3JkZXItdCBiZy1tdXRlZC81MCBmb250LW1lZGl1bSBbJj50cl06bGFzdDpib3JkZXItYi0wXCIsXG4gICAgICBjbGFzc05hbWVcbiAgICApfVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbikpXG5UYWJsZUZvb3Rlci5kaXNwbGF5TmFtZSA9IFwiVGFibGVGb290ZXJcIlxuXG5jb25zdCBUYWJsZVJvdyA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIEhUTUxUYWJsZVJvd0VsZW1lbnQsXG4gIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxUYWJsZVJvd0VsZW1lbnQ+XG4+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4gIDx0clxuICAgIHJlZj17cmVmfVxuICAgIGNsYXNzTmFtZT17Y24oXG4gICAgICBcImJvcmRlci1iIHRyYW5zaXRpb24tY29sb3JzIGhvdmVyOmJnLW11dGVkLzUwIGRhdGEtW3N0YXRlPXNlbGVjdGVkXTpiZy1tdXRlZFwiLFxuICAgICAgY2xhc3NOYW1lXG4gICAgKX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pKVxuVGFibGVSb3cuZGlzcGxheU5hbWUgPSBcIlRhYmxlUm93XCJcblxuY29uc3QgVGFibGVIZWFkID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgSFRNTFRhYmxlQ2VsbEVsZW1lbnQsXG4gIFJlYWN0LlRoSFRNTEF0dHJpYnV0ZXM8SFRNTFRhYmxlQ2VsbEVsZW1lbnQ+XG4+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4gIDx0aFxuICAgIHJlZj17cmVmfVxuICAgIGNsYXNzTmFtZT17Y24oXG4gICAgICBcImgtMTIgcHgtNCB0ZXh0LWxlZnQgYWxpZ24tbWlkZGxlIGZvbnQtbWVkaXVtIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBbJjpoYXMoW3JvbGU9Y2hlY2tib3hdKV06cHItMFwiLFxuICAgICAgY2xhc3NOYW1lXG4gICAgKX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pKVxuVGFibGVIZWFkLmRpc3BsYXlOYW1lID0gXCJUYWJsZUhlYWRcIlxuXG5jb25zdCBUYWJsZUNlbGwgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBIVE1MVGFibGVDZWxsRWxlbWVudCxcbiAgUmVhY3QuVGRIVE1MQXR0cmlidXRlczxIVE1MVGFibGVDZWxsRWxlbWVudD5cbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPHRkXG4gICAgcmVmPXtyZWZ9XG4gICAgY2xhc3NOYW1lPXtjbihcInAtNCBhbGlnbi1taWRkbGUgWyY6aGFzKFtyb2xlPWNoZWNrYm94XSldOnByLTBcIiwgY2xhc3NOYW1lKX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pKVxuVGFibGVDZWxsLmRpc3BsYXlOYW1lID0gXCJUYWJsZUNlbGxcIlxuXG5jb25zdCBUYWJsZUNhcHRpb24gPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBIVE1MVGFibGVDYXB0aW9uRWxlbWVudCxcbiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTFRhYmxlQ2FwdGlvbkVsZW1lbnQ+XG4+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4gIDxjYXB0aW9uXG4gICAgcmVmPXtyZWZ9XG4gICAgY2xhc3NOYW1lPXtjbihcIm10LTQgdGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmRcIiwgY2xhc3NOYW1lKX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pKVxuVGFibGVDYXB0aW9uLmRpc3BsYXlOYW1lID0gXCJUYWJsZUNhcHRpb25cIlxuXG5leHBvcnQge1xuICBUYWJsZSxcbiAgVGFibGVIZWFkZXIsXG4gIFRhYmxlQm9keSxcbiAgVGFibGVGb290ZXIsXG4gIFRhYmxlSGVhZCxcbiAgVGFibGVSb3csXG4gIFRhYmxlQ2VsbCxcbiAgVGFibGVDYXB0aW9uLFxufVxuIl0sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxLQUFLQSxLQUFLLE1BQU0sT0FBTztBQUU5QixTQUFTQyxFQUFFLFFBQVEsYUFBYTtBQUVoQyxNQUFNQyxLQUFLLGdCQUFHRixLQUFLLENBQUNHLFVBQVUsQ0FHNUIsQ0FBQztFQUFFQyxTQUFTO0VBQUUsR0FBR0M7QUFBTSxDQUFDLEVBQUVDLEdBQUcsa0JBQzdCTixLQUFBLENBQUFPLGFBQUE7RUFBS0gsU0FBUyxFQUFDO0FBQStCLGdCQUM1Q0osS0FBQSxDQUFBTyxhQUFBLFVBQUFDLFFBQUE7RUFDRUYsR0FBRyxFQUFFQSxHQUFJO0VBQ1RGLFNBQVMsRUFBRUgsRUFBRSxDQUFDLCtCQUErQixFQUFFRyxTQUFTO0FBQUUsR0FDdERDLEtBQUssQ0FDVixDQUNFLENBQ04sQ0FBQztBQUNGSCxLQUFLLENBQUNPLFdBQVcsR0FBRyxPQUFPO0FBRTNCLE1BQU1D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