function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import * as React from "react";
import { ChevronLeft, ChevronRight, MoreHorizontal } from "lucide-react";
import { cn } from "../../lib/utils";
import { buttonVariants } from "../components/ui/button";
const Pagination = ({
  className,
  ...props
}) => /*#__PURE__*/React.createElement("nav", _extends({
  role: "navigation",
  "aria-label": "pagination",
  className: cn("mx-auto flex w-full justify-center", className)
}, props));
Pagination.displayName = "Pagination";
const PaginationContent = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement("ul", _extends({
  ref: ref,
  className: cn("flex flex-row items-center gap-1", className)
}, props)));
PaginationContent.displayName = "PaginationContent";
const PaginationItem = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement("li", _extends({
  ref: ref,
  className: cn("", className)
}, props)));
PaginationItem.displayName = "PaginationItem";
const PaginationLink = ({
  className,
  isActive,
  size = "icon",
  ...props
}) => /*#__PURE__*/React.createElement("a", _extends({
  "aria-current": isActive ? "page" : undefined,
  className: cn(buttonVariants({
    variant: isActive ? "outline" : "ghost",
    size
  }), className)
}, props));
PaginationLink.displayName = "PaginationLink";
const PaginationPrevious = ({
  className,
  ...props
}) => /*#__PURE__*/React.createElement(PaginationLink, _extends({
  "aria-label": "Go to previous page",
  size: "default",
  className: cn("gap-1 pl-2.5", className)
}, props), /*#__PURE__*/React.createElement(ChevronLeft, {
  className: "h-4 w-4"
}), /*#__PURE__*/React.createElement("span", null, "Previous"));
PaginationPrevious.displayName = "PaginationPrevious";
const PaginationNext = ({
  className,
  ...props
}) => /*#__PURE__*/React.createElement(PaginationLink, _extends({
  "aria-label": "Go to next page",
  size: "default",
  className: cn("gap-1 pr-2.5", className)
}, props), /*#__PURE__*/React.createElement("span", null, "Next"), /*#__PURE__*/React.createElement(ChevronRight, {
  className: "h-4 w-4"
}));
PaginationNext.displayName = "PaginationNext";
const PaginationEllipsis = ({
  className,
  ...props
}) => /*#__PURE__*/React.createElement("span", _extends({
  "aria-hidden": true,
  className: cn("flex h-9 w-9 items-center justify-center", className)
}, props), /*#__PURE__*/React.createElement(MoreHorizontal, {
  className: "h-4 w-4"
}), /*#__PURE__*/React.createElement("span", {
  className: "sr-only"
}, "More pages"));
PaginationEllipsis.displayName = "PaginationEllipsis";
export { Pagination, PaginationContent, PaginationEllipsis, PaginationItem, PaginationLink, PaginationNext, PaginationPrevious };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIkNoZXZyb25MZWZ0IiwiQ2hldnJvblJpZ2h0IiwiTW9yZUhvcml6b250YWwiLCJjbiIsImJ1dHRvblZhcmlhbnRzIiwiUGFnaW5hdGlvbiIsImNsYXNzTmFtZSIsInByb3BzIiwiY3JlYXRlRWxlbWVudCIsIl9leHRlbmRzIiwicm9sZSIsImRpc3BsYXlOYW1lIiwiUGFnaW5hdGlvbkNvbnRlbnQiLCJmb3J3YXJkUmVmIiwicmVmIiwiUGFnaW5hdGlvbkl0ZW0iLCJQYWdpbmF0aW9uTGluayIsImlzQWN0aXZlIiwic2l6ZSIsInVuZGVmaW5lZCIsInZhcmlhbnQiLCJQYWdpbmF0aW9uUHJldmlvdXMiLCJQYWdpbmF0aW9uTmV4dCIsIlBhZ2luYXRpb25FbGxpcHNpcyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3VpL3BhZ2luYXRpb24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBDaGV2cm9uTGVmdCwgQ2hldnJvblJpZ2h0LCBNb3JlSG9yaXpvbnRhbCB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIlxuXG5pbXBvcnQgeyBjbiB9IGZyb20gXCJAL2xpYi91dGlsc1wiXG5pbXBvcnQgeyBCdXR0b25Qcm9wcywgYnV0dG9uVmFyaWFudHMgfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL2J1dHRvblwiXG5cbmNvbnN0IFBhZ2luYXRpb24gPSAoeyBjbGFzc05hbWUsIC4uLnByb3BzIH06IFJlYWN0LkNvbXBvbmVudFByb3BzPFwibmF2XCI+KSA9PiAoXG4gIDxuYXZcbiAgICByb2xlPVwibmF2aWdhdGlvblwiXG4gICAgYXJpYS1sYWJlbD1cInBhZ2luYXRpb25cIlxuICAgIGNsYXNzTmFtZT17Y24oXCJteC1hdXRvIGZsZXggdy1mdWxsIGp1c3RpZnktY2VudGVyXCIsIGNsYXNzTmFtZSl9XG4gICAgey4uLnByb3BzfVxuICAvPlxuKVxuUGFnaW5hdGlvbi5kaXNwbGF5TmFtZSA9IFwiUGFnaW5hdGlvblwiXG5cbmNvbnN0IFBhZ2luYXRpb25Db250ZW50ID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgSFRNTFVMaXN0RWxlbWVudCxcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHM8XCJ1bFwiPlxuPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKFxuICA8dWxcbiAgICByZWY9e3JlZn1cbiAgICBjbGFzc05hbWU9e2NuKFwiZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIgZ2FwLTFcIiwgY2xhc3NOYW1lKX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pKVxuUGFnaW5hdGlvbkNvbnRlbnQuZGlzcGxheU5hbWUgPSBcIlBhZ2luYXRpb25Db250ZW50XCJcblxuY29uc3QgUGFnaW5hdGlvbkl0ZW0gPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBIVE1MTElFbGVtZW50LFxuICBSZWFjdC5Db21wb25lbnRQcm9wczxcImxpXCI+XG4+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4gIDxsaSByZWY9e3JlZn0gY2xhc3NOYW1lPXtjbihcIlwiLCBjbGFzc05hbWUpfSB7Li4ucHJvcHN9IC8+XG4pKVxuUGFnaW5hdGlvbkl0ZW0uZGlzcGxheU5hbWUgPSBcIlBhZ2luYXRpb25JdGVtXCJcblxudHlwZSBQYWdpbmF0aW9uTGlua1Byb3BzID0ge1xuICBpc0FjdGl2ZT86IGJvb2xlYW5cbn0gJiBQaWNrPEJ1dHRvblByb3BzLCBcInNpemVcIj4gJlxuICBSZWFjdC5Db21wb25lbnRQcm9wczxcImFcIj5cblxuY29uc3QgUGFnaW5hdGlvbkxpbmsgPSAoe1xuICBjbGFzc05hbWUsXG4gIGlzQWN0aXZlLFxuICBzaXplID0gXCJpY29uXCIsXG4gIC4uLnByb3BzXG59OiBQYWdpbmF0aW9uTGlua1Byb3BzKSA9PiAoXG4gIDxhXG4gICAgYXJpYS1jdXJyZW50PXtpc0FjdGl2ZSA/IFwicGFnZVwiIDogdW5kZWZpbmVkfVxuICAgIGNsYXNzTmFtZT17Y24oXG4gICAgICBidXR0b25WYXJpYW50cyh7XG4gICAgICAgIHZhcmlhbnQ6IGlzQWN0aXZlID8gXCJvdXRsaW5lXCIgOiBcImdob3N0XCIsXG4gICAgICAgIHNpemUsXG4gICAgICB9KSxcbiAgICAgIGNsYXNzTmFtZVxuICAgICl9XG4gICAgey4uLnByb3BzfVxuICAvPlxuKVxuUGFnaW5hdGlvbkxpbmsuZGlzcGxheU5hbWUgPSBcIlBhZ2luYXRpb25MaW5rXCJcblxuY29uc3QgUGFnaW5hdGlvblByZXZpb3VzID0gKHtcbiAgY2xhc3NOYW1lLFxuICAuLi5wcm9wc1xufTogUmVhY3QuQ29tcG9uZW50UHJvcHM8dHlwZW9mIFBhZ2luYXRpb25MaW5rPikgPT4gKFxuICA8UGFnaW5hdGlvbkxpbmtcbiAgICBhcmlhLWxhYmVsPVwiR28gdG8gcHJldmlvdXMgcGFnZVwiXG4gICAgc2l6ZT1cImRlZmF1bHRcIlxuICAgIGNsYXNzTmFtZT17Y24oXCJnYXAtMSBwbC0yLjVcIiwgY2xhc3NOYW1lKX1cbiAgICB7Li4ucHJvcHN9XG4gID5cbiAgICA8Q2hldnJvbkxlZnQgY2xhc3NOYW1lPVwiaC00IHctNFwiIC8+XG4gICAgPHNwYW4+UHJldmlvdXM8L3NwYW4+XG4gIDwvUGFnaW5hdGlvbkxpbms+XG4pXG5QYWdpbmF0aW9uUHJldmlvdXMuZGlzcGxheU5hbWUgPSBcIlBhZ2luYXRpb25QcmV2aW91c1wiXG5cbmNvbnN0IFBhZ2luYXRpb25OZXh0ID0gKHtcbiAgY2xhc3NOYW1lLFxuICAuLi5wcm9wc1xufTogUmVhY3QuQ29tcG9uZW50UHJvcHM8dHlwZW9mIFBhZ2luYXRpb25MaW5rPikgPT4gKFxuICA8UGFnaW5hdGlvbkxpbmtcbiAgICBhcmlhLWxhYmVsPVwiR28gdG8gbmV4dCBwYWdlXCJcbiAgICBzaXplPVwiZGVmYXVsdFwiXG4gICAgY2xhc3NOYW1lPXtjbihcImdhcC0xIHByLTIuNVwiLCBjbGFzc05hbWUpfVxuICAgIHsuLi5wcm9wc31cbiAgPlxuICAgIDxzcGFuPk5leHQ8L3NwYW4+XG4gICAgPENoZXZyb25SaWdodCBjbGFzc05hbWU9XCJoLTQgdy00XCIgLz5cbiAgPC9QYWdpbmF0aW9uTGluaz5cbilcblBhZ2luYXRpb25OZXh0LmRpc3BsYXlOYW1lID0gXCJQYWdpbmF0aW9uTmV4dFwiXG5cbmNvbnN0IFBhZ2luYXRpb25FbGxpcHNpcyA9ICh7XG4gIGNsYXNzTmFtZSxcbiAgLi4ucHJvcHNcbn06IFJlYWN0LkNvbXBvbmVudFByb3BzPFwic3BhblwiPikgPT4gKFxuICA8c3BhblxuICAgIGFyaWEtaGlkZGVuXG4gICAgY2xhc3NOYW1lPXtjbihcImZsZXggaC05IHctOSBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXJcIiwgY2xhc3NOYW1lKX1cbiAgICB7Li4ucHJvcHN9XG4gID5cbiAgICA8TW9yZUhvcml6b250YWwgY2xhc3NOYW1lPVwiaC00IHctNFwiIC8+XG4gICAgPHNwYW4gY2xhc3NOYW1lPVwic3Itb25seVwiPk1vcmUgcGFnZXM8L3NwYW4+XG4gIDwvc3Bhbj5cbilcblBhZ2luYXRpb25FbGxpcHNpcy5kaXNwbGF5TmFtZSA9IFwiUGFnaW5hdGlvbkVsbGlwc2lzXCJcblxuZXhwb3J0IHtcbiAgUGFnaW5hdGlvbixcbiAgUGFnaW5hdGlvbkNvbnRlbnQsXG4gIFBhZ2luYXRpb25FbGxpcHNpcyxcbiAgUGFnaW5hdGlvbkl0ZW0sXG4gIFBhZ2luYXRpb25MaW5rLFxuICBQYWdpbmF0aW9uTmV4dCxcbiAgUGFnaW5hdGlvblByZXZpb3VzLFxufVxuIl0sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxLQUFLQSxLQUFLLE1BQU0sT0FBTztBQUM5QixTQUFTQyxXQUFXLEVBQUVDLFlBQVksRUFBRUMsY0FBYyxRQUFRLGNBQWM7QUFFeEUsU0FBU0MsRUFBRSxRQUFRLGFBQWE7QUFDaEMsU0FBc0JDLGNBQWMsUUFBUSx3QkFBd0I7QUFFcEUsTUFBTUMsVUFBVSxHQUFHQSxDQUFDO0VBQUVDLFNBQVM7RUFBRSxHQUFHQztBQUFtQyxDQUFDLGtCQUN0RVIsS0FBQSxDQUFB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