function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import * as React from "react";
import * as HoverCardPrimitive from "@radix-ui/react-hover-card";
import { cn } from "@/lib/utils";
const HoverCard = HoverCardPrimitive.Root;
const HoverCardTrigger = HoverCardPrimitive.Trigger;
const HoverCardContent = /*#__PURE__*/React.forwardRef(({
  className,
  align = "center",
  sideOffset = 4,
  ...props
}, ref) => /*#__PURE__*/React.createElement(HoverCardPrimitive.Content, _extends({
  ref: ref,
  align: align,
  sideOffset: sideOffset,
  className: cn("z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2", className)
}, props)));
HoverCardContent.displayName = HoverCardPrimitive.Content.displayName;
export { HoverCard, HoverCardTrigger, HoverCardContent };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIkhvdmVyQ2FyZFByaW1pdGl2ZSIsImNuIiwiSG92ZXJDYXJkIiwiUm9vdCIsIkhvdmVyQ2FyZFRyaWdnZXIiLCJUcmlnZ2VyIiwiSG92ZXJDYXJkQ29udGVudCIsImZvcndhcmRSZWYiLCJjbGFzc05hbWUiLCJhbGlnbiIsInNpZGVPZmZzZXQiLCJwcm9wcyIsInJlZiIsImNyZWF0ZUVsZW1lbnQiLCJDb250ZW50IiwiX2V4dGVuZHMiLCJkaXNwbGF5TmFtZSJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3VpL2hvdmVyLWNhcmQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgKiBhcyBIb3ZlckNhcmRQcmltaXRpdmUgZnJvbSBcIkByYWRpeC11aS9yZWFjdC1ob3Zlci1jYXJkXCJcblxuaW1wb3J0IHsgY24gfSBmcm9tIFwiQC9saWIvdXRpbHNcIlxuXG5jb25zdCBIb3ZlckNhcmQgPSBIb3ZlckNhcmRQcmltaXRpdmUuUm9vdFxuXG5jb25zdCBIb3ZlckNhcmRUcmlnZ2VyID0gSG92ZXJDYXJkUHJpbWl0aXZlLlRyaWdnZXJcblxuY29uc3QgSG92ZXJDYXJkQ29udGVudCA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIEhvdmVyQ2FyZFByaW1pdGl2ZS5Db250ZW50PixcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBIb3ZlckNhcmRQcmltaXRpdmUuQ29udGVudD5cbj4oKHsgY2xhc3NOYW1lLCBhbGlnbiA9IFwiY2VudGVyXCIsIHNpZGVPZmZzZXQgPSA0LCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPEhvdmVyQ2FyZFByaW1pdGl2ZS5Db250ZW50XG4gICAgcmVmPXtyZWZ9XG4gICAgYWxpZ249e2FsaWdufVxuICAgIHNpZGVPZmZzZXQ9e3NpZGVPZmZzZXR9XG4gICAgY2xhc3NOYW1lPXtjbihcbiAgICAgIFwiei01MCB3LTY0IHJvdW5kZWQtbWQgYm9yZGVyIGJnLXBvcG92ZXIgcC00IHRleHQtcG9wb3Zlci1mb3JlZ3JvdW5kIHNoYWRvdy1tZCBvdXRsaW5lLW5vbmUgZGF0YS1bc3RhdGU9b3Blbl06YW5pbWF0ZS1pbiBkYXRhLVtzdGF0ZT1jbG9zZWRdOmFuaW1hdGUtb3V0IGRhdGEtW3N0YXRlPWNsb3NlZF06ZmFkZS1vdXQtMCBkYXRhLVtzdGF0ZT1vcGVuXTpmYWRlLWluLTAgZGF0YS1bc3RhdGU9Y2xvc2VkXTp6b29tLW91dC05NSBkYXRhLVtzdGF0ZT1vcGVuXTp6b29tLWluLTk1IGRhdGEtW3NpZGU9Ym90dG9tXTpzbGlkZS1pbi1mcm9tLXRvcC0yIGRhdGEtW3NpZGU9bGVmdF06c2xpZGUtaW4tZnJvbS1yaWdodC0yIGRhdGEtW3NpZGU9cmlnaHRdOnNsaWRlLWluLWZyb20tbGVmdC0yIGRhdGEtW3NpZGU9dG9wXTpzbGlkZS1pbi1mcm9tLWJvdHRvbS0yXCIsXG4gICAgICBjbGFzc05hbWVcbiAgICApfVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbikpXG5Ib3ZlckNhcmRDb250ZW50LmRpc3BsYXlOYW1lID0gSG92ZXJDYXJkUHJpbWl0aXZlLkNvbnRlbnQuZGlzcGxheU5hbWVcblxuZXhwb3J0IHsgSG92ZXJDYXJkLCBIb3ZlckNhcmRUcmlnZ2VyLCBIb3ZlckNhcmRDb250ZW50IH1cbiJdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sS0FBS0EsS0FBSyxNQUFNLE9BQU87QUFDOUIsT0FBTyxLQUFLQyxrQkFBa0IsTUFBTSw0QkFBNEI7QUFFaEUsU0FBU0MsRUFBRSxRQUFRLGFBQWE7QUFFaEMsTUFBTUMsU0FBUyxHQUFHRixrQkFBa0IsQ0FBQ0csSUFBSTtBQUV6QyxNQUFNQyxnQkFBZ0IsR0FBR0osa0JBQWtCLENBQUNLLE9BQU87QUFFbkQsTUFBTUMsZ0JBQWdCLGdCQUFHUCxLQUFLLENBQUNRLFVBQVUsQ0FHdkMsQ0FBQztFQUFFQyxTQUFTO0VBQUVDLEtBQUssR0FBRyxRQUFRO0VBQUVDLFVBQVUsR0FBRyxDQUFDO0VBQUUsR0FBR0M7QUFBTSxDQUFDLEVBQUVDLEdBQUcsa0JBQy9EYixLQUFBLENBQUFjLGFBQUEsQ0FBQ2Isa0JBQWtCLENBQUNjLE9BQU8sRUFBQUMsUUFBQTtFQUN6QkgsR0FBRyxFQUFFQSxHQUFJO0VBQ1RILEtBQUssRUFBRUEsS0FBTTtFQUNiQyxVQUFVLEVBQUVBLFVBQVc7RUFDdkJGLFNBQVMsRUFBRVAsRUFBRSxDQUNYLDRhQUE0YSxFQUM1YU8sU0FDRjtBQUFFLEdBQ0VHLEtBQUssQ0FDVixDQUNGLENBQUM7QUFDRkwsZ0JBQWdCLENBQUNVLFdBQVcsR0FBR2hCLGtCQUFrQixDQUFDYyxPQUFPLENBQUNFLFdBQVc7QUFFckUsU0FBU2QsU0FBUyxFQUFFRSxnQkFBZ0IsRUFBRUUsZ0JBQWdCIiwiaWdub3JlTGlzdCI6W119