function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import * as React from "react";
import * as AvatarPrimitive from "@radix-ui/react-avatar";
import { cn } from "@/lib/utils";
const Avatar = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement(AvatarPrimitive.Root, _extends({
  ref: ref,
  className: cn("relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full", className)
}, props)));
Avatar.displayName = AvatarPrimitive.Root.displayName;
const AvatarImage = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement(AvatarPrimitive.Image, _extends({
  ref: ref,
  className: cn("aspect-square h-full w-full", className)
}, props)));
AvatarImage.displayName = AvatarPrimitive.Image.displayName;
const AvatarFallback = /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => /*#__PURE__*/React.createElement(AvatarPrimitive.Fallback, _extends({
  ref: ref,
  className: cn("flex h-full w-full items-center justify-center rounded-full bg-muted", className)
}, props)));
AvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;
export { Avatar, AvatarImage, AvatarFallback };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIkF2YXRhclByaW1pdGl2ZSIsImNuIiwiQXZhdGFyIiwiZm9yd2FyZFJlZiIsImNsYXNzTmFtZSIsInByb3BzIiwicmVmIiwiY3JlYXRlRWxlbWVudCIsIlJvb3QiLCJfZXh0ZW5kcyIsImRpc3BsYXlOYW1lIiwiQXZhdGFySW1hZ2UiLCJJbWFnZSIsIkF2YXRhckZhbGxiYWNrIiwiRmFsbGJhY2siXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy91aS9hdmF0YXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgKiBhcyBBdmF0YXJQcmltaXRpdmUgZnJvbSBcIkByYWRpeC11aS9yZWFjdC1hdmF0YXJcIlxuXG5pbXBvcnQgeyBjbiB9IGZyb20gXCJAL2xpYi91dGlsc1wiXG5cbmNvbnN0IEF2YXRhciA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIEF2YXRhclByaW1pdGl2ZS5Sb290PixcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBBdmF0YXJQcmltaXRpdmUuUm9vdD5cbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPEF2YXRhclByaW1pdGl2ZS5Sb290XG4gICAgcmVmPXtyZWZ9XG4gICAgY2xhc3NOYW1lPXtjbihcbiAgICAgIFwicmVsYXRpdmUgZmxleCBoLTEwIHctMTAgc2hyaW5rLTAgb3ZlcmZsb3ctaGlkZGVuIHJvdW5kZWQtZnVsbFwiLFxuICAgICAgY2xhc3NOYW1lXG4gICAgKX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pKVxuQXZhdGFyLmRpc3BsYXlOYW1lID0gQXZhdGFyUHJpbWl0aXZlLlJvb3QuZGlzcGxheU5hbWVcblxuY29uc3QgQXZhdGFySW1hZ2UgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBBdmF0YXJQcmltaXRpdmUuSW1hZ2U+LFxuICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIEF2YXRhclByaW1pdGl2ZS5JbWFnZT5cbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPEF2YXRhclByaW1pdGl2ZS5JbWFnZVxuICAgIHJlZj17cmVmfVxuICAgIGNsYXNzTmFtZT17Y24oXCJhc3BlY3Qtc3F1YXJlIGgtZnVsbCB3LWZ1bGxcIiwgY2xhc3NOYW1lKX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pKVxuQXZhdGFySW1hZ2UuZGlzcGxheU5hbWUgPSBBdmF0YXJQcmltaXRpdmUuSW1hZ2UuZGlzcGxheU5hbWVcblxuY29uc3QgQXZhdGFyRmFsbGJhY2sgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBBdmF0YXJQcmltaXRpdmUuRmFsbGJhY2s+LFxuICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIEF2YXRhclByaW1pdGl2ZS5GYWxsYmFjaz5cbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPEF2YXRhclByaW1pdGl2ZS5GYWxsYmFja1xuICAgIHJlZj17cmVmfVxuICAgIGNsYXNzTmFtZT17Y24oXG4gICAgICBcImZsZXggaC1mdWxsIHctZnVsbCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgcm91bmRlZC1mdWxsIGJnLW11dGVkXCIsXG4gICAgICBjbGFzc05hbWVcbiAgICApfVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbikpXG5BdmF0YXJGYWxsYmFjay5kaXNwbGF5TmFtZSA9IEF2YXRhclByaW1pdGl2ZS5GYWxsYmFjay5kaXNwbGF5TmFtZVxuXG5leHBvcnQgeyBBdmF0YXIsIEF2YXRhckltYWdlLCBBdmF0YXJGYWxsYmFjayB9XG4iXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEtBQUtBLEtBQUssTUFBTSxPQUFPO0FBQzlCLE9BQU8sS0FBS0MsZUFBZSxNQUFNLHdCQUF3QjtBQUV6RCxTQUFTQyxFQUFFLFFBQVEsYUFBYTtBQUVoQyxNQUFNQyxNQUFNLGdCQUFHSCxLQUFLLENBQUNJLFVBQVUsQ0FHN0IsQ0FBQztFQUFFQyxTQUFTO0VBQUUsR0FBR0M7QUFBTSxDQUFDLEVBQUVDLEdBQUcsa0JBQzdCUCxLQUFBLENBQUFRLGFBQUEsQ0FBQ1AsZUFBZSxDQUFDUSxJQUFJLEVBQUFDLFFBQUE7RUFDbkJILEdBQUcsRUFBRUEsR0FBSTtFQUNURixTQUFTLEVBQUVILEVBQUUsQ0FDWCwrREFBK0QsRUFDL0RHLFNBQ0Y7QUFBRSxHQUNFQyxLQUFLLENBQ1YsQ0FDRixDQUFDO0FBQ0ZILE1BQU0sQ0FBQ1EsV0FBVyxHQUFHVixlQUFlLENBQUNRLElBQUksQ0FBQ0UsV0FBVztBQUVyRCxNQUFNQyxXQUFXLGdCQUFHWixLQUFLLENBQUNJLFVBQVUsQ0FHbEMsQ0FBQztFQUFFQyxTQUFTO0VBQUUsR0FBR0M7QUFBTSxDQUFDLEVBQUVDLEdBQUcsa0JBQzdCUCxLQUFBLENBQUFRLGFBQUEsQ0FBQ1AsZUFBZSxDQUFDWSxLQUFLLEVBQUFILFFBQUE7RUFDcEJILEdBQUcsRUFBRUEsR0FBSTtFQUNURixTQUFTLEVBQUVILEVBQUUsQ0FBQyw2QkFBNkIsRUFBRUcsU0FBUztBQUFFLEdBQ3BEQyxLQUFLLENBQ1YsQ0FDRixDQUFDO0FBQ0ZNLFdBQVcsQ0FBQ0QsV0FBVyxHQUFHVixlQUFlLENBQUNZLEtBQUssQ0FBQ0YsV0FBVztBQUUzRCxNQUFNRyxjQUFjLGdCQUFHZCxLQUFLLENBQUNJLFVBQVUsQ0FHckMsQ0FBQztFQUFFQyxTQUFTO0VBQUUsR0FBR0M7QUFBTSxDQUFDLEVBQUVDLEdBQUcsa0JBQzdCUCxLQUFBLENBQUFRLGFBQUEsQ0FBQ1AsZUFBZSxDQUFDYyxRQUFRLEVBQUFMLFFBQUE7RUFDdkJILEdBQUcsRUFBRUEsR0FBSTtFQUNURixTQUFTLEVBQUVILEVBQUUsQ0FDWCxzRUFBc0UsRUFDdEVHLFNBQ0Y7QUFBRSxHQUNFQyxLQUFLLENBQ1YsQ0FDRixDQUFDO0FBQ0ZRLGNBQWMsQ0FBQ0gsV0FBVyxHQUFHVixlQUFlLENBQUNjLFFBQVEsQ0FBQ0osV0FBVztBQUVqRSxTQUFTUixNQUFNLEVBQUVTLFdBQVcsRUFBRUUsY0FBYyIsImlnbm9yZUxpc3QiOltdfQ==